// Code generated by 'yaegi extract math'. DO NOT EDIT.

//go:build go1.19 && !go1.20
// +build go1.19,!go1.20

package stdlib

import (
	"go/constant"
	"go/token"
	"math"
	"reflect"
)

func init() {
	Symbols["math/math"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Abs":                    reflect.ValueOf(math.Abs),
		"Acos":                   reflect.ValueOf(math.Acos),
		"Acosh":                  reflect.ValueOf(math.Acosh),
		"Asin":                   reflect.ValueOf(math.Asin),
		"Asinh":                  reflect.ValueOf(math.Asinh),
		"Atan":                   reflect.ValueOf(math.Atan),
		"Atan2":                  reflect.ValueOf(math.Atan2),
		"Atanh":                  reflect.ValueOf(math.Atanh),
		"Cbrt":                   reflect.ValueOf(math.Cbrt),
		"Ceil":                   reflect.ValueOf(math.Ceil),
		"Copysign":               reflect.ValueOf(math.Copysign),
		"Cos":                    reflect.ValueOf(math.Cos),
		"Cosh":                   reflect.ValueOf(math.Cosh),
		"Dim":                    reflect.ValueOf(math.Dim),
		"E":                      reflect.ValueOf(constant.MakeFromLiteral("2.718281828459045235360287471352662497757247093699959574966967629999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999915381582656295876954084573937089875451114577351846146794084931740285948616691341847414027578406554473181707227236586851265764651645905847510959190344296539874845879202688250628640763072004265432206295968063210150305804869001246887972597493570932349888005289247615323956516315158360171423625675522995753433287222252355552765124002689844928681850433349609375", token.FLOAT, 0)),
		"Erf":                    reflect.ValueOf(math.Erf),
		"Erfc":                   reflect.ValueOf(math.Erfc),
		"Erfcinv":                reflect.ValueOf(math.Erfcinv),
		"Erfinv":                 reflect.ValueOf(math.Erfinv),
		"Exp":                    reflect.ValueOf(math.Exp),
		"Exp2":                   reflect.ValueOf(math.Exp2),
		"Expm1":                  reflect.ValueOf(math.Expm1),
		"FMA":                    reflect.ValueOf(math.FMA),
		"Float32bits":            reflect.ValueOf(math.Float32bits),
		"Float32frombits":        reflect.ValueOf(math.Float32frombits),
		"Float64bits":            reflect.ValueOf(math.Float64bits),
		"Float64frombits":        reflect.ValueOf(math.Float64frombits),
		"Floor":                  reflect.ValueOf(math.Floor),
		"Frexp":                  reflect.ValueOf(math.Frexp),
		"Gamma":                  reflect.ValueOf(math.Gamma),
		"Hypot":                  reflect.ValueOf(math.Hypot),
		"Ilogb":                  reflect.ValueOf(math.Ilogb),
		"Inf":                    reflect.ValueOf(math.Inf),
		"IsInf":                  reflect.ValueOf(math.IsInf),
		"IsNaN":                  reflect.ValueOf(math.IsNaN),
		"J0":                     reflect.ValueOf(math.J0),
		"J1":                     reflect.ValueOf(math.J1),
		"Jn":                     reflect.ValueOf(math.Jn),
		"Ldexp":                  reflect.ValueOf(math.Ldexp),
		"Lgamma":                 reflect.ValueOf(math.Lgamma),
		"Ln10":                   reflect.ValueOf(constant.MakeFromLiteral("2.302585092994045684017991454684364207601101488628772976033327899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999888419050123397225301582011463526883805360113390662985640477207773685698652316645874628375666248227802854905558337512110758378670571408384853233273134672345445408941545266322209688314778943097334737891688965444341124945836513846641915193792504241540811292634786313241835679532248491870033896273466720034229341754227794736298307043398381210863590240478515625", token.FLOAT, 0)),
		"Ln2":                    reflect.ValueOf(constant.MakeFromLiteral("0.69314718055994530941723212145817656807550013436025525412068000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001415194373080265561082927837087084344940901012795439655165058766285200773460618965530363456480526381475005077396246619466539127564932479592920742216178708084158449805373048677289511024464704470764906506854651593034025420167258579355393689028681054642990878952522490666589507560593240591480635263219565205797508878650392549758407767512835562229156494140625", token.FLOAT, 0)),
		"Log":                    reflect.ValueOf(math.Log),
		"Log10":                  reflect.ValueOf(math.Log10),
		"Log10E":                 reflect.ValueOf(constant.MakeFromLiteral("0.434294481903251827651128918916605082294397005803666566114453783348360161102072168297660901567163037309743192147961043272317839440588246480118550134297029494719088054253941482491086465938345415585155759038614442426395654441386262570936406010339797685416672332649287406569310536423532023185195896559468480452939748010969201238823448653742647301667721199627328806470238168419784634756905112827546894752966904280470670268080429816657925738735907258858257689440394728494596477547107227223932568449527025222778320312", token.FLOAT, 0)),
		"Log1p":                  reflect.ValueOf(math.Log1p),
		"Log2":                   reflect.ValueOf(math.Log2),
		"Log2E":                  reflect.ValueOf(constant.MakeFromLiteral("1.4426950408889634073599246810018921374266459541529859341354494079580433993749146346893339786114257419293845033163294314083507999755544846239611907435525216332899097000721824126158349708223917166957677078416781406183775228599051511075660994067674017669077443636035790929592683433725353158440550959659371343449160015378263432742033439514812125331083009860727917506131882521541326987045634250864509023911511191483978677186374987575379570817679261873927069972895534968499744142567120519515810883603990077972412109375", token.FLOAT, 0)),
		"Logb":                   reflect.ValueOf(math.Logb),
		"Max":                    reflect.ValueOf(math.Max),
		"MaxFloat32":             reflect.ValueOf(constant.MakeFromLiteral("340282346638528859811704183484516925440", token.FLOAT, 0)),
		"MaxFloat64":             reflect.ValueOf(constant.MakeFromLiteral("1.797693134862315708145274237317043567980705675258449965989174768e+308", token.FLOAT, 0)),
		"MaxInt":                 reflect.ValueOf(constant.MakeFromLiteral("9223372036854775807", token.INT, 0)),
		"MaxInt16":               reflect.ValueOf(constant.MakeFromLiteral("32767", token.INT, 0)),
		"MaxInt32":               reflect.ValueOf(constant.MakeFromLiteral("2147483647", token.INT, 0)),
		"MaxInt64":               reflect.ValueOf(constant.MakeFromLiteral("9223372036854775807", token.INT, 0)),
		"MaxInt8":                reflect.ValueOf(constant.MakeFromLiteral("127", token.INT, 0)),
		"MaxUint":                reflect.ValueOf(constant.MakeFromLiteral("18446744073709551615", token.INT, 0)),
		"MaxUint16":              reflect.ValueOf(constant.MakeFromLiteral("65535", token.INT, 0)),
		"MaxUint32":              reflect.ValueOf(constant.MakeFromLiteral("4294967295", token.INT, 0)),
		"MaxUint64":              reflect.ValueOf(constant.MakeFromLiteral("18446744073709551615", token.INT, 0)),
		"MaxUint8":               reflect.ValueOf(constant.MakeFromLiteral("255", token.INT, 0)),
		"Min":                    reflect.ValueOf(math.Min),
		"MinInt":                 reflect.ValueOf(constant.MakeFromLiteral("-9223372036854775808", token.INT, 0)),
		"MinInt16":               reflect.ValueOf(constant.MakeFromLiteral("-32768", token.INT, 0)),
		"MinInt32":               reflect.ValueOf(constant.MakeFromLiteral("-2147483648", token.INT, 0)),
		"MinInt64":               reflect.ValueOf(constant.MakeFromLiteral("-9223372036854775808", token.INT, 0)),
		"MinInt8":                reflect.ValueOf(constant.MakeFromLiteral("-128", token.INT, 0)),
		"Mod":                    reflect.ValueOf(math.Mod),
		"Modf":                   reflect.ValueOf(math.Modf),
		"NaN":                    reflect.ValueOf(math.NaN),
		"Nextafter":              reflect.ValueOf(math.Nextafter),
		"Nextafter32":            reflect.ValueOf(math.Nextafter32),
		"Phi":                    reflect.ValueOf(constant.MakeFromLiteral("1.6180339887498948482045868343656381177203091798057628621354486200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000182071304158467309116911595992061725398391561128256847252000611776215920781402836063721790385243484339518375057156975325644693046322758520022980065802603809084797493185276197082039867401246114959934552617674675727018376416454968744966893666235623016621342424783987452917213194767680642999206750568908998122737261278480946913305160705931484699249267578125", token.FLOAT, 0)),
		"Pi":                     reflect.ValueOf(constant.MakeFromLiteral("3.14159265358979323846264338327950288419716939937510582097494459000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003435772615129603434498211963030841921482178438804453897335258267519269706734320651063221487539253776083012584176980530747920729899510016784508036894544672382574026641447457570334386207919117636087158946692070756750085109268894362683280816796690657114319706039056187020746767389981513215809418353833576598528579582221553767595878525753505527973175048828125", token.FLOAT, 0)),
		"Pow":                    reflect.ValueOf(math.Pow),
		"Pow10":                  reflect.ValueOf(math.Pow10),
		"Remainder":              reflect.ValueOf(math.Remainder),
		"Round":                  reflect.ValueOf(math.Round),
		"RoundToEven":            reflect.ValueOf(math.RoundToEven),
		"Signbit":                reflect.ValueOf(math.Signbit),
		"Sin":                    reflect.ValueOf(math.Sin),
		"Sincos":                 reflect.ValueOf(math.Sincos),
		"Sinh":                   reflect.ValueOf(math.Sinh),
		"SmallestNonzeroFloat32": reflect.ValueOf(constant.MakeFromLiteral("1.401298464324817070923729583289916131280261941876515771757068284e-45", token.FLOAT, 0)),
		"SmallestNonzeroFloat64": reflect.ValueOf(constant.MakeFromLiteral("4.940656458412465441765687928682213723650598026143247644255856825e-324", token.FLOAT, 0)),
		"Sqrt":                   reflect.ValueOf(math.Sqrt),
		"Sqrt2":                  reflect.ValueOf(constant.MakeFromLiteral("1.41421356237309504880168872420969807856967187537694807317667974000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004323765938058859110790809189935203741085080817567477089882113044958850498773623358525565861851129876348789609794106946739297705689102785820058246053413975143841811200342808772996170415721920241778428219194657439785645464904963027542167904783605347636322557001102745976060999822170499921744947628955605296244895318323597788179313283762894570827484130859375", token.FLOAT, 0)),
		"SqrtE":                  reflect.ValueOf(constant.MakeFromLiteral("1.648721270700128146848650787814163571653776100710148011575079310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020226858916968274843150602668482503367672176645296331812261548446415082002916651849000244340014963702102531383331501115880705613888078586351554596509557335783371758458269080355611731621391768095397951110832146951289070906310203973904994444759061208919576959597566236702123824266109238722009191670069060821062842804411718855561730379122309386730194091796875", token.FLOAT, 0)),
		"SqrtPhi":                reflect.ValueOf(constant.MakeFromLiteral("1.272019649514068964252422461737491491715608041840096248616640380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065006246721545969404361269288163804950411179653981828517567760148693306182955828185024815349283329941581139895461567663652842776732102367608362083641367873951560003128587692497412101057065092324289531170532352488694492094241415673485681635761762576176620094443039889195088143110667429802046357654190427028514370354390916606490691265207715332508087158203125", token.FLOAT, 0)),
		"SqrtPi":                 reflect.ValueOf(constant.MakeFromLiteral("1.772453850905516027298167483341145182797549456122387128213807790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025929018706887592739427325908314228899413269492729747477008121321432429341407016591592654883470469588078163189398789952358177579734359925636026851123883897508010626837260490486390504492495903657315678085264505437469712090313426365479589834977377774408046780597605556547761251896920979701168580998973948181014176459120712525674434800748713314533233642578125", token.FLOAT, 0)),
		"Tan":                    reflect.ValueOf(math.Tan),
		"Tanh":                   reflect.ValueOf(math.Tanh),
		"Trunc":                  reflect.ValueOf(math.Trunc),
		"Y0":                     reflect.ValueOf(math.Y0),
		"Y1":                     reflect.ValueOf(math.Y1),
		"Yn":                     reflect.ValueOf(math.Yn),
	}
}
